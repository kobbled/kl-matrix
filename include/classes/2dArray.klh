--header
%include header_guard.m
--oop
%include namespace.m

--start header file
header_if -- ifndef class
header_def -- define class

-- declare_member functions
-- ***************
-- public

-- creation methods
declare_member(class_name,create_array_from_string,class_name,cafs)
ROUTINE create_array_from_string(sarr : STRING; col_delim : STRING; row_delim : STRING) : arry(type_name) FROM class_name
declare_member(class_name,create_row_from_string,class_name,crws)
ROUTINE create_row_from_string(sarr : STRING; col_delim : STRING) : arrx(type_name) FROM class_name

declare_member(class_name,clear,class_name,clr)
ROUTINE clear(arr : arry(type_name)) FROM class_name

-- setters
declare_member(class_name,set_row,class_name,setr)
ROUTINE set_row(row_idx : INTEGER; row : arrx(type_name); out_arr : arry(type_name)) FROM class_name
declare_member(class_name,set_from_array,class_name,star)
ROUTINE set_from_array(in_arr : ARRAY[*,*] OF inner_type; out_arr : arry(type_name)) FROM class_name
declare_member(class_name,set_row_from_array,class_name,srfa)
ROUTINE set_row_from_array(in_row : ARRAY[*] OF inner_type; row_idx : INTEGER; out_arr : arry(type_name)) FROM class_name

-- conversions
declare_member(class_name,convert_to_array,class_name,cvar)
ROUTINE convert_to_array(in_arr : arry(type_name); out_arr : ARRAY[*,*] OF inner_type) FROM class_name

--initalizations
declare_member(class_name,full,class_name,full)
ROUTINE full (number : inner_type; out_arr : arry(type_name)) FROM class_name
declare_member(class_name,zeros,class_name,zero)
ROUTINE zeros(out_arr : arry(type_name)) FROM class_name
declare_member(class_name,ones,class_name,ones)
ROUTINE ones(out_arr : arry(type_name)) FROM class_name
declare_member(class_name,random,class_name,rand)
ROUTINE random(out_arr : arry(type_name)) FROM class_name
declare_member(class_name,eye,class_name,eye)
ROUTINE eye(out_arr : arry(type_name))  FROM class_name

--operations

declare_member(class_name,add,class_name,add)
ROUTINE add (arr1  : arry(type_name); arr2  : arry(type_name)) : arry(type_name) FROM class_name
declare_member(class_name,subtract,class_name,subt)
ROUTINE subtract (arr1  : arry(type_name); arr2  : arry(type_name)) : arry(type_name) FROM class_name
declare_member(class_name,smult,class_name,smlt)
ROUTINE smult (arr  : arry(type_name); val : inner_type) : arry(type_name) FROM class_name

-- only works for square matrices
%ifeq t_rows t_columns
declare_member(class_name,mult,class_name,mult)
ROUTINE mult (arr1  : arry(type_name); arr2  : arry(type_name)) : arry(type_name) FROM class_name
declare_member(class_name,transpose,class_name,trnp)
ROUTINE transpose(arr  : arry(type_name))  : arry(type_name) FROM class_name
declare_member(class_name,inverse,class_name,inv)
ROUTINE inverse(arr  : arry(type_name))  : arry(type_name) FROM class_name
declare_member(class_name,det,class_name,det)
ROUTINE det(arr : arry(type_name)) : inner_type FROM class_name
declare_member(class_name,cofactor,class_name,cfct)
ROUTINE cofactor(arr : arry(type_name)) : arry(type_name) FROM class_name
declare_member(class_name,trace,class_name,trac)
ROUTINE trace(arr  : arry(type_name))  : inner_type FROM class_name
%endif

--testing routines
%ifdef UNIT_TESTING
declare_member(class_name,test_row,class_name,trw)
ROUTINE test_row (expected : arrx(type_name); actual : arrx(type_name))  : BOOLEAN FROM class_name
declare_member(class_name,testing,class_name,test)
ROUTINE testing (expected : arry(type_name); actual : arry(type_name)) : BOOLEAN FROM class_name
%endif UNIT_TESTING

%endif --end header