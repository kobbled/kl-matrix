--header
%include header_guard.m
--oop
%include namespace.m

--start header file
header_if -- ifndef class
header_def -- define class

-- declare_member functions
-- ***************
  -- public
declare_member(class_name,constructor,class_name,init)
ROUTINE constructor (value : REAL) FROM class_name
declare_member(class_name,desctructor,class_name,dsct)
ROUTINE desctructor  FROM class_name
declare_member(class_name,full,class_name,full)
ROUTINE full (number : REAL) FROM class_name
declare_member(class_name,zeros,class_name,zero)
ROUTINE zeros FROM class_name
declare_member(class_name,ones,class_name,ones)
ROUTINE ones  FROM class_name
declare_member(class_name,random,class_name,rand)
ROUTINE random  FROM class_name
declare_member(class_name,eye,class_name,eye)
ROUTINE eye  FROM class_name
-- private
declare_member(class_name,arr_func,class_name,cnst)
ROUTINE arr_func (operation : INTEGER; value : REAL) FROM class_name

--testing routines
declare_member(class_name,test_row,class_name,trw)
ROUTINE test_row (expected : arrx(type_name); actual : arrx(type_name))  : BOOLEAN FROM class_name
declare_member(class_name,testing,class_name,test)
ROUTINE testing (expected : arry(type_name)) : BOOLEAN FROM class_name

%endif --end header