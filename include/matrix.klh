%ifndef matrix_h
%define matrix_h

%include namespace.m

%define prog_name matrix
%define prog_name_alias mtrx

--public
declare_function(prog_name,full_1D,prog_name_alias,full1R)
ROUTINE matrix__full_1D (arr : ARRAY[*] OF REAL; number : REAL) FROM matrix
declare_function(prog_name,random_1D,prog_name_alias,rand1R)
ROUTINE matrix__random_1D (arr : ARRAY[*] OF REAL) FROM matrix
declare_function(prog_name,zeros_1D,prog_name_alias,zros1R)
ROUTINE matrix__zeros_1D (arr : ARRAY[*] OF REAL) FROM matrix
declare_function(prog_name,ones_1D,prog_name_alias,ones1R)
ROUTINE matrix__ones_1D (arr : ARRAY[*] OF REAL) FROM matrix
declare_function(prog_name,linspace,prog_name_alias,lspce_r)
ROUTINE matrix__linspace (start_idx, stop_idx : REAL ; arr : ARRAY[*] OF REAL ; endpoint : BOOLEAN) FROM matrix
declare_function(prog_name,eye,prog_name_alias,eye)
ROUTINE matrix__eye (arr : ARRAY[*,*] OF REAL; row : ARRAY[*] OF REAL) FROM matrix

--updown = TRUE shift up ; updown = FALSE shift down
declare_function(prog_name,shift_s,prog_name_alias,shifts)
ROUTINE matrix__shift_s(arr : ARRAY[*] OF STRING; amount : INTEGER; updown : BOOLEAN; unint_arr : ARRAY[*] OF STRING) FROM matrix
declare_function(prog_name,shift_r,prog_name_alias,shiftr)
ROUTINE matrix__shift_r(arr : ARRAY[*] OF REAL; amount : INTEGER; updown : BOOLEAN; unint_arr : ARRAY[*] OF REAL) FROM matrix

declare_function(prog_name,add_1D,prog_name_alias,add1R)
ROUTINE matrix__add_1D (arr1, arr2 : ARRAY[*] OF REAL; out_arr : ARRAY[*] OF REAL) FROM matrix
declare_function(prog_name,sub_1D,prog_name_alias,sub1R)
ROUTINE matrix__sub_1D (arr1, arr2 : ARRAY[*] OF REAL; out_arr : ARRAY[*] OF REAL) FROM matrix
declare_function(prog_name,mul_1D,prog_name_alias,mul1R)
ROUTINE matrix__mul_1D (arr1, arr2 : ARRAY[*] OF REAL; out_arr : ARRAY[*] OF REAL) FROM matrix
declare_function(prog_name,div_1D,prog_name_alias,div1R)
ROUTINE matrix__div_1D (arr1, arr2 : ARRAY[*] OF REAL; out_arr : ARRAY[*] OF REAL) FROM matrix

%endif --matrix_h