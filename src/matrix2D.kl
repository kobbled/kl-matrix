PROGRAM matrix2d
%NOBUSYLAMP
%COMMENT = '2D matrix library'
%NOLOCKGROUP
%NOPAUSE = COMMAND + TPENABLE + ERROR

%include errors.klt
%include matrix.klt

%include errors.klh
%from math.klh %import srand, rand
%include matrix2D.klh
%include matrix2D.private.klh

-- public :

ROUTINE matrix__full_2D
  BEGIN
    matrix__init_2D(arr, row, OP_FULL, number)
  END matrix__full_2D

ROUTINE matrix__random_2D
  BEGIN
    matrix__init_2D(arr, row, OP_RANDOM, 0)
  END matrix__random_2D

ROUTINE matrix__zeros_2D
  BEGIN
    matrix__init_2D(arr, row, OP_ZEROS, 0)
  END matrix__zeros_2D

ROUTINE matrix__ones_2D
  BEGIN
    matrix__init_2D(arr, row, OP_ONES, 0)
  END matrix__ones_2D

ROUTINE matrix__eye
  BEGIN
    matrix__init_2D(arr, row, OP_EYE, 0)
  END matrix__eye

-- private :

ROUTINE matrix__init_2D
  VAR
    i,j : INTEGER
    tme  : INTEGER
    rrand : REAL
  BEGIN
    FOR i=1 TO ARRAY_LEN(arr) DO
      FOR j=1 TO ARRAY_LEN(row) DO
        SELECT opts OF
          CASE (OP_ZEROS) :
            arr[i,j] = 0.0
          CASE (OP_EYE) :
            IF (i=j) THEN
              arr[i,j] = 1.0
            ELSE
              arr[i,j] = 0.0
            ENDIF
          CASE (OP_FULL) :
            arr[i,j] = val
          CASE (OP_RANDOM) :
            GET_TIME(tme)
            math__srand(tme*i*j)
            rrand = math__rand
            arr[i,j] = rrand
          CASE (OP_ONES) :
            arr[i,j] = 1.0
          ELSE :
            karelError(INVALID_INDEX, 'init_2D: Invalid operator selected', ER_ABORT)
        ENDSELECT
      ENDFOR
    ENDFOR
  END matrix__init_2D

BEGIN
END matrix2d
